name: baseline
seed: 0
print_config: True
ignore_warnings: False

n_repeat: 5

device: cpu  # Use 'cpu' to run on the CPU, or specify the CUDA device index (an integer)

methods:
  # Perform grid search if *parameter* is a list, otherwise set hyperparameters to the given constant
  knn:
    _target_: src.baseline_methods.KNN
    n_neighbors: 1
    device: ${device}
  erm:
    _target_: src.baseline_methods.ERM
    n_epochs: [50, 100, 200]
    lr: [0.1, 0.01, 0.001]
    weight_decay: 0.0
    device: ${device}
  reweighted_erm:
    _target_: src.baseline_methods.ReweightedERM
    n_epochs: [50, 100, 200]
    lr: [0.1, 0.01, 0.001]
    weight_decay: 0.0
    device: ${device}
  dro:
    _target_: src.baseline_methods.DRO
    n_epochs: [50, 100, 200]
    lr: [0.1, 0.01, 0.001]
    group_weight_step: [1, 0.1, 0.01]
    weight_decay: [0.0, 1.0]
    device: ${device}

selected_methods: [knn, erm, reweighted_erm, dro]

datamodule: # overriding default context_class_size, batch_size
  context_class_size: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 20, 25, 30, 35, 40, 45, 50]
  batch_size: 1  # do not modify

defaults:
  - datamodule: waterbirds_emb_contexts # Options: 'inaturalist_emb_contexts', 'waterbirds_emb_contexts', 'cub_emb_contexts', 'imagenet_emb_contexts'
  - encoding_extractor: dinov2_vitb14 # Options: dinov2_vitb14, resnet50, resnet18
  - trainer: default
  - override hydra/job_logging: custom
  - _self_

hydra:
  run:
    dir: ${oc.env:OUTPUT_DIR}/runs/${name}/${now:%Y-%m-%d_%H-%M-%S}
  job:
    chdir: True
